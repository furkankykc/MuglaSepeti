# Generated by Django 3.0.8 on 2020-10-05 13:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import muglaSepetiApp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('location', models.CharField(max_length=500, verbose_name='location')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Bucket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_note', models.CharField(blank=True, max_length=500, verbose_name='delivery note')),
                ('order_address', models.CharField(max_length=500, verbose_name='order address')),
                ('order_phone', models.CharField(max_length=500, verbose_name="orderer's phone")),
                ('checked_at', models.DateTimeField(blank=True, null=True, verbose_name='check time')),
                ('ordered_at', models.DateTimeField(blank=True, null=True, verbose_name='order time')),
                ('on_the_way_at', models.DateTimeField(blank=True, null=True, verbose_name='on the way time')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='deliver time')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancel time')),
                ('is_ordered', models.BooleanField(default=False, verbose_name='is ordered')),
                ('is_checked', models.BooleanField(default=False, verbose_name='is checked')),
                ('is_on_the_way', models.BooleanField(default=False, verbose_name='is on the way')),
                ('is_delivered', models.BooleanField(blank=True, default=False, verbose_name='is delivered')),
                ('is_deleted', models.BooleanField(blank=True, default=False, verbose_name='is deleted')),
                ('payment_type', models.CharField(choices=[('N', 'Cash'), ('K', 'Credit Card')], max_length=1)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('description', models.CharField(max_length=500, verbose_name='description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='logo')),
                ('slug', models.SlugField(blank=True, verbose_name='slug')),
                ('service_delay', models.DurationField(verbose_name='Service Delay')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Telefon numarası doğru formatta girilmeli: '+999999999'. 15 karakter limiti vardır.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('email', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message="Email adresi doğru formatta girilmeli: 'example@mail.com'.", regex='^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$')], verbose_name='email adress')),
                ('address', models.CharField(max_length=500, verbose_name='address')),
                ('open_at', models.TimeField(default=django.utils.timezone.now, verbose_name='open time')),
                ('close_at', models.TimeField(default=django.utils.timezone.now, verbose_name='close time')),
                ('is_open', models.BooleanField(default=False, help_text='if this box not checked your company wont open even if it currently open-hours', verbose_name='is Open')),
                ('instagram', models.URLField(blank=True, verbose_name='instagram address')),
                ('facebook', models.URLField(blank=True, verbose_name='facebook address')),
                ('twitter', models.URLField(blank=True, verbose_name='twitter address')),
                ('tripadvisor', models.URLField(blank=True, verbose_name='tripadvisor address')),
                ('youtube', models.URLField(blank=True, verbose_name='youtube address')),
                ('pinterest', models.URLField(blank=True, verbose_name='pinterest address')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Telefon numarası doğru formatta girilmeli: '+999999999'. 15 karakter limiti vardır.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['ico'])], verbose_name='icon')),
                ('email', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message="Email adresi doğru formatta girilmeli: 'example@mail.com'.", regex='^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$')], verbose_name='email address')),
                ('address', models.CharField(max_length=100, null=True, verbose_name='address')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='Site Logo')),
                ('footer_logo', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='Footer Logo')),
                ('site_description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Site Description')),
                ('content_description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Content Description')),
                ('slider_title', models.CharField(blank=True, max_length=20, null=True, verbose_name='Slider Title')),
                ('slider_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Slider Description')),
                ('slider_image_1', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='Slider Image 1')),
                ('slider_image_2', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='Slider Image 2')),
                ('slider_image_3', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='Slider Image 3')),
                ('slider_image_4', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='Slider Image 4')),
                ('menu_background', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png'])], verbose_name='Menu Background')),
                ('menu_inner_background', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png'])], verbose_name='Menu Inner Background')),
                ('bread_crumb_background', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='Breadcrumb Background')),
                ('order_background', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png'])], verbose_name='Order Background')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('pinterest', models.URLField(blank=True, null=True)),
                ('googleplus', models.URLField(blank=True, null=True)),
                ('about_title', models.CharField(blank=True, max_length=50, null=True)),
                ('about_description', models.CharField(blank=True, max_length=1500, null=True)),
                ('about_image_1', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='About Image 1')),
                ('about_image_2', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='About Image 2')),
                ('about_image_3', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='About Image 3')),
                ('about_image_large', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='About Image Large')),
                ('about_background_quotes', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='About Quotes Background ')),
                ('about_fact_title_1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Statistic Title 1')),
                ('about_fact_value_1', models.IntegerField(blank=True, null=True, verbose_name='Statistic Value 1')),
                ('about_fact_title_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Statistic Title 2')),
                ('about_fact_value_2', models.IntegerField(blank=True, null=True, verbose_name='Statistic Value 2')),
                ('about_fact_title_3', models.CharField(blank=True, max_length=20, null=True, verbose_name='Statistic Title 3')),
                ('about_fact_value_3', models.IntegerField(blank=True, null=True, verbose_name='Statistic Value 3')),
                ('about_fact_title_4', models.CharField(blank=True, max_length=20, null=True, verbose_name='Statistic Title 4')),
                ('about_fact_value_4', models.IntegerField(blank=True, null=True, verbose_name='Statistic Value 4')),
                ('about_content_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Content Title')),
                ('about_content_description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Content Description')),
                ('about_info_title_1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Information Title 1')),
                ('about_info_description_1', models.CharField(blank=True, max_length=150, null=True, verbose_name='Information Description 1')),
                ('about_info_title_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Information Title 2')),
                ('about_info_description_2', models.CharField(blank=True, max_length=150, null=True, verbose_name='Information Description 2')),
                ('about_info_title_3', models.CharField(blank=True, max_length=20, null=True, verbose_name='Information Title 3')),
                ('about_info_description_3', models.CharField(blank=True, max_length=150, null=True, verbose_name='Information Description 3')),
                ('about_quote_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Quotes Title')),
                ('about_quote_1', models.CharField(blank=True, help_text="Type writer name end of the text heading with '-' Ex:-Furkankykc", max_length=300, null=True, verbose_name='Quote 1')),
                ('about_quote_2', models.CharField(blank=True, help_text="Type writer name end of the text heading with '-' Ex:-Furkankykc", max_length=300, null=True, verbose_name='Quote 2')),
                ('about_quote_3', models.CharField(blank=True, help_text="Type writer name end of the text heading with '-' Ex:-Furkankykc", max_length=300, null=True, verbose_name='Quote 3')),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('detail', models.CharField(blank=True, max_length=100, null=True, verbose_name='detail')),
                ('price', models.FloatField(verbose_name='price')),
                ('image', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='product image')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('config', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='muglaSepetiApp.Config', verbose_name='Site Config')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Telefon numarası doğru formatta girilmeli: '+999999999'. 15 karakter limiti vardır.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('email', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message="Email adresi doğru formatta girilmeli: 'example@mail.com'.", regex='^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$')], verbose_name='email address')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_address', to='muglaSepetiApp.Address', verbose_name='address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='PacketPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Address')),
                ('price', models.FloatField(default=5, verbose_name='Minimum Price')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muglaSepetiApp.Company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Minimum Packet Price',
                'verbose_name_plural': 'Minimum Packet Prices',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muglaSepetiApp.Company', verbose_name='Company')),
                ('entry_list', models.ManyToManyField(to='muglaSepetiApp.Entry', verbose_name='Entry list')),
            ],
            options={
                'verbose_name': 'Menu',
                'verbose_name_plural': 'Menus',
            },
        ),
        migrations.CreateModel(
            name='FoodGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='muglaSepetiApp.Company', verbose_name='company')),
            ],
            options={
                'verbose_name': 'Product Group',
                'verbose_name_plural': 'Product Groups',
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('image', models.ImageField(blank=True, null=True, upload_to=muglaSepetiApp.models.get_image_path, verbose_name='category image')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='muglaSepetiApp.Company', verbose_name='owner')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='muglaSepetiApp.FoodGroup', verbose_name='group')),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muglaSepetiApp.FoodCategory', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='entry',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comp_entry', to='muglaSepetiApp.Company', verbose_name='company'),
        ),
        migrations.AddField(
            model_name='company',
            name='active_menu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comp_active_menu', to='muglaSepetiApp.Menu', verbose_name='active menu'),
        ),
        migrations.AddField(
            model_name='company',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(choices=[('1', 'Beğenmedim'), ('2', 'İdare eder'), ('3', 'İyiydi işte'), ('4', 'Güzeldi'), ('5', 'Mükemmeldi')], max_length=1)),
                ('comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='comment')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('bucket', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='muglaSepetiApp.Bucket', verbose_name='Bucket')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='BucketEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0, verbose_name='Total Bucket Price')),
                ('count', models.IntegerField(default=1, verbose_name='Count')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='muglaSepetiApp.Entry', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Bucket Product',
                'verbose_name_plural': 'Bucket Products',
            },
        ),
        migrations.AddField(
            model_name='bucket',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='muglaSepetiApp.Company', verbose_name='company'),
        ),
        migrations.AddField(
            model_name='bucket',
            name='order_list',
            field=models.ManyToManyField(blank=True, to='muglaSepetiApp.BucketEntry', verbose_name='order list'),
        ),
        migrations.AddField(
            model_name='bucket',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bucket', to='muglaSepetiApp.Profile', verbose_name='profile'),
        ),
        migrations.AddField(
            model_name='address',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='muglaSepetiApp.Profile', verbose_name='owner'),
        ),
    ]
